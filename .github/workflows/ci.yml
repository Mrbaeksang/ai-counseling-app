name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aicounseling_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: JDK 21 설정
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Gradle 캐시
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Gradle 권한 설정
      run: chmod +x gradlew
    
    - name: 환경변수 설정
      run: |
        echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> $GITHUB_ENV
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
    
    - name: 테스트 실행
      run: ./gradlew test
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/aicounseling_test
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_REDIS_HOST: localhost
        SPRING_REDIS_PORT: 6379
    
    - name: 코드 커버리지 체크
      run: ./gradlew jacocoTestCoverageVerification
    
    - name: 테스트 리포트 업로드
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports
        path: |
          build/reports/tests/
          build/reports/jacoco/
    
    - name: 빌드
      run: ./gradlew build -x test
    
    - name: JAR 아티팩트 업로드
      uses: actions/upload-artifact@v3
      with:
        name: app-jar
        path: build/libs/*.jar

  # 배포 작업 (나중에 추가)
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: 배포 단계
  #       run: echo "배포 로직 추가 예정"