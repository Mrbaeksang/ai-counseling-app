openapi: 3.0.3
info:
  title: AI 철학자/상담사 대화 API
  description: 역사적 철학자 및 상담사와 대화하는 AI 상담 서비스 API
  version: 1.0.0
  contact:
    name: AI Counseling App Team
    email: support@aicounseling.app

servers:
  - url: http://localhost:8080/api
    description: 개발 서버
  - url: https://api.aicounseling.app/api
    description: 운영 서버

tags:
  - name: auth
    description: 인증 관련
  - name: counselors
    description: 상담사 관련
  - name: chat
    description: 채팅/상담 관련
  - name: users
    description: 사용자 관련

paths:
  # ===== 인증 =====
  /auth/social-login:
    post:
      tags: [auth]
      summary: 소셜 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [provider, token]
              properties:
                provider:
                  type: string
                  enum: [google, kakao]
                token:
                  type: string
                  description: 소셜 로그인 토큰
      responses:
        200:
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /auth/refresh:
    post:
      tags: [auth]
      summary: 토큰 갱신
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken:
                  type: string
      responses:
        200:
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  # ===== 상담사 =====
  /counselors/categories:
    get:
      tags: [counselors]
      summary: 상담 카테고리 목록 조회
      responses:
        200:
          description: 카테고리 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /counselors:
    get:
      tags: [counselors]
      summary: 상담사 목록 조회
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: string
            enum: [popular, rating, recent]
      responses:
        200:
          description: 상담사 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Counselor'

  /counselors/{counselorId}:
    get:
      tags: [counselors]
      summary: 상담사 상세 정보
      parameters:
        - name: counselorId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 상담사 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounselorDetail'

  /counselors/recommend:
    post:
      tags: [counselors]
      summary: AI 기반 상담사 추천
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [concern]
              properties:
                concern:
                  type: string
                  description: 고민 내용
      responses:
        200:
          description: 추천 상담사 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CounselorRecommendation'

  # ===== 채팅/상담 =====
  /chat/sessions:
    get:
      tags: [chat]
      summary: 내 상담 세션 목록
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: 세션 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatSession'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer

    post:
      tags: [chat]
      summary: 새 상담 세션 시작
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [counselorId]
              properties:
                counselorId:
                  type: integer
                title:
                  type: string
                  description: 세션 제목 (자동 생성 가능)
      responses:
        201:
          description: 세션 생성됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
        403:
          description: 일일/월간 한도 초과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /chat/sessions/{sessionId}:
    get:
      tags: [chat]
      summary: 세션 상세 정보
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 세션 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionDetail'

    delete:
      tags: [chat]
      summary: 세션 삭제
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: 삭제 완료

  /chat/sessions/{sessionId}/messages:
    get:
      tags: [chat]
      summary: 세션 메시지 목록
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
      responses:
        200:
          description: 메시지 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

    post:
      tags: [chat]
      summary: 메시지 전송 (AI 응답 포함)
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [content]
              properties:
                content:
                  type: string
                  description: 사용자 메시지
                inputType:
                  type: string
                  enum: [text, voice]
                  default: text
      responses:
        200:
          description: AI 응답 포함
          content:
            application/json:
              schema:
                type: object
                properties:
                  userMessage:
                    $ref: '#/components/schemas/Message'
                  aiResponse:
                    $ref: '#/components/schemas/Message'

  /chat/messages/{messageId}/bookmark:
    post:
      tags: [chat]
      summary: 메시지 북마크
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 북마크 토글됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookmarked:
                    type: boolean

  # ===== 사용자 =====
  /users/me:
    get:
      tags: [users]
      summary: 내 정보 조회
      security:
        - bearerAuth: []
      responses:
        200:
          description: 사용자 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users/me/limits:
    get:
      tags: [users]
      summary: 사용 제한 조회
      security:
        - bearerAuth: []
      responses:
        200:
          description: 사용 제한 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLimits'

  /users/me/favorites:
    get:
      tags: [users]
      summary: 즐겨찾기 상담사 목록
      security:
        - bearerAuth: []
      responses:
        200:
          description: 즐겨찾기 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Counselor'

    post:
      tags: [users]
      summary: 상담사 즐겨찾기 추가
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [counselorId]
              properties:
                counselorId:
                  type: integer
      responses:
        201:
          description: 즐겨찾기 추가됨

  /users/me/bookmarks:
    get:
      tags: [users]
      summary: 북마크한 조언 목록
      security:
        - bearerAuth: []
      responses:
        200:
          description: 북마크 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookmarkedMessage'

  /reviews:
    post:
      tags: [users]
      summary: 상담 후기 작성
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [sessionId, rating]
              properties:
                sessionId:
                  type: integer
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                content:
                  type: string
                isPublic:
                  type: boolean
                  default: true
      responses:
        201:
          description: 후기 작성됨

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: integer
        user:
          $ref: '#/components/schemas/UserProfile'

    UserProfile:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        nickname:
          type: string
        profileImageUrl:
          type: string
        isPremium:
          type: boolean
        createdAt:
          type: string
          format: date-time

    UserLimits:
      type: object
      properties:
        dailySessionsUsed:
          type: integer
        dailySessionsLimit:
          type: integer
        monthlySessionsUsed:
          type: integer
        monthlySessionsLimit:
          type: integer
        canStartNewSession:
          type: boolean

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        iconUrl:
          type: string
        counselorCount:
          type: integer

    Counselor:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        era:
          type: string
        specialty:
          type: string
        introduction:
          type: string
        avatarUrl:
          type: string
        avgRating:
          type: number
        totalSessions:
          type: integer
        categoryId:
          type: integer
        categoryName:
          type: string

    CounselorDetail:
      allOf:
        - $ref: '#/components/schemas/Counselor'
        - type: object
          properties:
            conversationStyle:
              type: string
            recentReviews:
              type: array
              items:
                $ref: '#/components/schemas/Review'

    CounselorRecommendation:
      allOf:
        - $ref: '#/components/schemas/Counselor'
        - type: object
          properties:
            matchReason:
              type: string
              description: 추천 이유

    ChatSession:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        counselorId:
          type: integer
        counselorName:
          type: string
        counselorAvatar:
          type: string
        title:
          type: string
        summary:
          type: string
        status:
          type: string
          enum: [active, closed]
        messageCount:
          type: integer
        startedAt:
          type: string
          format: date-time
        lastMessageAt:
          type: string
          format: date-time

    ChatSessionDetail:
      allOf:
        - $ref: '#/components/schemas/ChatSession'
        - type: object
          properties:
            messages:
              type: array
              items:
                $ref: '#/components/schemas/Message'

    Message:
      type: object
      properties:
        id:
          type: integer
        sessionId:
          type: integer
        content:
          type: string
        isAiResponse:
          type: boolean
        isBookmarked:
          type: boolean
        inputType:
          type: string
          enum: [text, voice]
        createdAt:
          type: string
          format: date-time

    BookmarkedMessage:
      allOf:
        - $ref: '#/components/schemas/Message'
        - type: object
          properties:
            sessionTitle:
              type: string
            counselorName:
              type: string

    Review:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        userNickname:
          type: string
        rating:
          type: integer
        content:
          type: string
        createdAt:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object